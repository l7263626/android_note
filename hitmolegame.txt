package com.hui.hitmolegame;

import android.media.AudioManager;
import android.media.SoundPool;
import android.os.CountDownTimer;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {
    Button btn1;
    TextView tvCount,tvScore;
    SoundPool soundPool;
    int soundId1,soundId2;
    ImageView image,image2,image3,image4,image5,image6,image7,image8,image9;
    ImageView[] images;
    int[] moles={R.drawable.hole,
            R.drawable.mole1,
            R.drawable.mole2,
            R.drawable.mole3,
    };

    boolean isGaming=true;
    int score;

//    Handler handler;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        soundPool=new SoundPool(2, AudioManager.STREAM_MUSIC,0);
        soundId1=soundPool.load(this,R.raw.didon,1);
        soundId2=soundPool.load(this,R.raw.dot,1);
//        handler=new Handler(){
//            @Override
//            public void handleMessage(Message msg) {
//                super.handleMessage(msg);
//            }
//        };
        findviews();
    }

    void findviews(){
        tvCount=(TextView)findViewById(R.id.textView);
        tvScore=(TextView)findViewById(R.id.textView2);
        image=(ImageView)findViewById(R.id.imageView);
        image2=(ImageView)findViewById(R.id.imageView2);
        image3=(ImageView)findViewById(R.id.imageView3);
        image4=(ImageView)findViewById(R.id.imageView4);
        image5=(ImageView)findViewById(R.id.imageView5);
        image6=(ImageView)findViewById(R.id.imageView6);
        image7=(ImageView)findViewById(R.id.imageView7);
        image8=(ImageView)findViewById(R.id.imageView8);
        image9=(ImageView)findViewById(R.id.imageView9);
        ImageView[] ivs={image,image2,image3,image4,image5,image6,image7,image8,image9};
        images=ivs;
        btn1=(Button)findViewById(R.id.button);
        btn1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                playMole();
                countDownTimer.start();
            }
        });
    }


    void playMole() {
//        if(moleIdx>=moles.length){
//            moleIdx=0;
//        }
//        handler.postDelayed(new Runnable() {
//            @Override
//            public void run() {
//                image.setImageResource(moles[moleIdx]);
//                ++moleIdx;
//                playMole();
//            }
//        },300);
        isGaming=true;

        new Thread(new Moles(images[(int)(Math.random()*9)],250)).start();
        new Thread(new Moles(images[(int)(Math.random()*9)],250)).start();
        new Thread(new Moles(images[(int)(Math.random()*9)],250)).start();
        new Thread(new Moles(images[(int)(Math.random()*9)],250)).start();
    }

    void selectHole(){
        new Thread(new Moles(images[(int)(Math.random()*9)],250)).start();
    }

    class Moles implements Runnable,View.OnClickListener{
        ImageView image;
        int delay;
        int moleIdx;

        public Moles(ImageView image,int delay) {
            this.image = image;
            this.image.setOnClickListener(this);
            this.delay=delay;
        }

        @Override
        public void run() {
            while (moleIdx<4) {
                if(moleIdx>=moles.length){
                    moleIdx=0;
                }
                image.post(new Runnable() {
                    @Override
                    public void run() {
                        image.setImageResource(moles[moleIdx]);
                    }
                });
                try {
                    Thread.sleep(delay);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                ++moleIdx;
            }
            image.post(new Runnable() {
                @Override
                public void run() {
                    image.setImageResource(R.drawable.hole);
                }
            });
            if(isGaming) {
                selectHole();
            }

        }

        @Override
        public void onClick(View view) {
            if(moleIdx==0 || moleIdx==1){
                soundPool.play(soundId1,1.0f,1.0f,0,0,1.0f);
            }
            if(moleIdx==2 || moleIdx==3){
                soundPool.play(soundId2, 1.0f, 1.0f, 0, 0, 1.0f);
                image.post(new Runnable() {
                    @Override
                    public void run() {
                        image.setImageResource(R.drawable.mole4);
                    }
                });
                ++score;
                tvScore.post(new Runnable() {
                    @Override
                    public void run() {
                        tvScore.setText(String.valueOf(score));
                    }
                });
                if(isGaming) {
                    selectHole();
                }
            }

        }
    }

    CountDownTimer countDownTimer=new CountDownTimer(10*1000,1000) {
        @Override
        public void onTick(long l) {
            tvCount.setText(String.valueOf(l/1000.0));
        }

        @Override
        public void onFinish() {
            tvCount.setText(String.valueOf(0));
            soundPool.play(soundId2,1.0f,1.0f,0,0,1.0f);
            isGaming=false;
        }
    };


}
